package com.revature.dao;

import com.revature.model.Item;
import com.revature.util.ConnectionUtil;

import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;


public class ItemPostgres implements Dao<Item> {
    private String schema = "public";

    public ItemPostgres() {
        super();
    }

    public ItemPostgres(String schema) {
        this.schema = schema;
    }

    public String getSchema() {
        return schema;
    }

    public void setSchema(String schema) {
        this.schema = schema;
    }

    @Override
    public Item get(int id) {
        Item item = null;
        String sql = "SELECT * FROM item WHERE item_id = ?;";

        try (Connection c = ConnectionUtil.getConnectionFromFile()) {
            c.setSchema(schema);
            PreparedStatement ps = c.prepareStatement(sql);
            ps.setInt(1, id);

            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                Item.Stock stock = Item.Stock.valueOf(rs.getString("stock"));
                String itemName = rs.getString("item_name");
                item = new Item(id, itemName, stock);
            }
        } catch (SQLException | IOException ex) {
            ex.printStackTrace();
        }

        return item;
    }

    @Override
    public List<Item> getAll() {
        List<Item> items = new ArrayList<>();
        String sql = "SELECT * FROM item";

        try (Connection c = ConnectionUtil.getConnectionFromFile()) {
            c.setSchema(schema);
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery(sql);

            while (rs.next()) {
                int id = rs.getInt("item_id");
                String itemName = rs.getString("item_name");
                Item.Stock stock = Item.Stock.valueOf(rs.getString("stock"));

                Item item = new Item(id, itemName, stock);
                items.add(item);
            }
        } catch (SQLException | IOException ex) {
            ex.printStackTrace();
        }

        return items;
    }

    @Override
    public Item insert(Item Item) {
        String sql = "INSERT INTO "
                + "item(item_name, stock) "
                + "VALUES(?, ?::stock) returning item_id";

        try (Connection c = ConnectionUtil.getConnectionFromFile()) {
            c.setSchema(schema);
            PreparedStatement ps = c.prepareStatement(sql);
            ps.setString(1, Item.getItemName());
            ps.setString(2, Item.getStock().name());

            ResultSet rs = ps.executeQuery(); // return the id generated by the database
            if (rs.next()) {
                Item.setId(rs.getInt("item_id"));
            }

        } catch (SQLException | IOException ex) {
            // TODO Auto-generated catch block
            ex.printStackTrace();
        }

        return Item;
    }

    @Override
    public boolean update(Item Item) {
        String sql = "UPDATE item "
                + "SET "
                + "item_name = ?, "
                + "stock = ?::stock "
                + "WHERE "
                + "item_id = ?";

        int rowsChanged = -1;

        try (Connection c = ConnectionUtil.getConnectionFromFile()) {
            c.setSchema(schema);
            PreparedStatement ps = c.prepareStatement(sql);

            ps.setString(1, Item.getItemName());
            ps.setString(2, Item.getStock().toString());
            ps.setInt(3, Item.getId());

            rowsChanged = ps.executeUpdate();

        } catch (SQLException | IOException ex) {
            // TODO Auto-generated catch block
            ex.printStackTrace();
        }

        return rowsChanged >= 1;

    }

    @Override
    public boolean delete(int id) {
        String sql = "DELETE FROM item WHERE item_id = ?";

        int rowsChanged = -1;
        try (Connection c = ConnectionUtil.getConnectionFromFile()) {
            c.setSchema(schema);
            PreparedStatement ps = c.prepareStatement(sql);

            ps.setInt(1, id);

            rowsChanged = ps.executeUpdate();

        } catch (SQLException | IOException ex) {
            // TODO Auto-generated catch block
            ex.printStackTrace();
        }

        return rowsChanged >= 1;
    }
}
